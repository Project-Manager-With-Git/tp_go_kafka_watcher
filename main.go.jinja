package main

import (
	"os"
	"{{ app_name }}/sender"
	"{{ app_name }}/watcher"

	log "github.com/Golang-Tools/loggerhelper/v2"
	s "github.com/Golang-Tools/schema-entry-go/v2"
)

func main() {
	root, err := s.NewEntryPoint(s.WithName("{{ app_name }}"), s.WithUsage("{{ app_name }}"))
	if err != nil {
		log.Error("create root node error", log.Dict{"err": err})
		os.Exit(1)
	}
	sender, err := s.NewEndPoint(new(sender.Application), s.WithName("sender"), s.WithUsage("{{ app_name }} sender"))
	if err != nil {
		log.Error("create sender node error", log.Dict{"err": err})
		os.Exit(1)
	}
	watcher, err := s.NewEndPoint(new(watcher.Application), s.WithName("watcher"), s.WithUsage("{{ app_name }} watcher"))
	if err != nil {
		log.Error("create watcher node error", log.Dict{"err": err})
		os.Exit(1)
	}
	sender.SetParent(root)
	watcher.SetParent(root)
	root.Parse(os.Args)
}
